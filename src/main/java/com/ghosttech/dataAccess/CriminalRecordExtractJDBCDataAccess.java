package com.ghosttech.dataAccess;import com.ghosttech.constants.DocValidConstant;import com.ghosttech.dao.CriminalRecordExtractDao;import com.ghosttech.mapper.rowMapper.CriminalRecordRowMapper;import com.ghosttech.model.CriminalRecordExtract;import com.ghosttech.model.CriminalRecordExtractManager;import com.ghosttech.utils.ConvertData;import com.ghosttech.utils.FileManager;import lombok.AllArgsConstructor;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.stereotype.Repository;import java.sql.Timestamp;import java.util.List;@Repository()@AllArgsConstructorpublic class CriminalRecordExtractJDBCDataAccess        implements CriminalRecordExtractDao {    private final JdbcTemplate jdbcTemplate;    @Override    public int insertCriminalRecordExtract(CriminalRecordExtract recordExtract) {        String sql = """                    INSERT INTO criminalRecordExtract(                        id,                        isEstablished,                        mother_name,                        birth_department,                    date,                    file_url,                        user_id                    )                    VALUES (?, ?, ?, ?, ?, ?, ?);                """;        return jdbcTemplate.update(sql,                recordExtract.getId(),                recordExtract.isEstablished(),                recordExtract.getMotherName(),                recordExtract.getBirthDepartment(),                Timestamp.from(recordExtract.getDate()),                ConvertData.objectToString(recordExtract.getFileUrl()),                recordExtract.getUserId());    }    @Override    public List<CriminalRecordExtractManager> selectCriminalRecordExtractByOrdersAndUser() {        String sql = "SELECT " +                     "DISTINCT ON (c.id) " +                     "o.id as order_id, " +                     "o.order_date, " +                     "o.order_status, " +                     "o.order_amount, " +                     "o.order_number, " +                     "u.id as user_id, " +                     "u.firstname as first_name, " +                     "u.lastname as last_name, " +                     "u.phone_number, " +                     "u.email, " +                     "u.town_of_residence, " +                     "u.is_active, " +                     "c.id as criminal_record_id," +                     "c.mother_name, " +                     "c.birth_department, " +                     "c.date as criminal_record_date, " +                     "c.file_url, " +                     "c.isestablished as is_established " +                     "FROM orders o " +                     "INNER JOIN users u ON o.user_id = u.id " +                     "INNER JOIN criminalrecordextract c ON u.id = c.user_id " +                     "WHERE o.ordertype = ? " +                     "ORDER BY c.id, o.order_date";        return jdbcTemplate.query(sql, new Object[]{"criminal_record"}, new CriminalRecordRowMapper());    }}