package com.ghosttech.dataAccess;import com.ghosttech.constants.DocValidConstant;import com.ghosttech.dao.CriminalRecordExtractDao;import com.ghosttech.mapper.rowMapper.CriminalRecordRowMapper;import com.ghosttech.model.CriminalRecordExtract;import com.ghosttech.model.CriminalRecordExtractManager;import com.ghosttech.utils.ConvertData;import com.ghosttech.utils.FileManager;import lombok.AllArgsConstructor;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.stereotype.Repository;import java.sql.Timestamp;import java.util.List;@Repository()@AllArgsConstructorpublic class CriminalRecordExtractJDBCDataAccess        implements CriminalRecordExtractDao {    private final JdbcTemplate jdbcTemplate;    @Override    public int insertCriminalRecordExtract(CriminalRecordExtract recordExtract) {        String sql = """                    INSERT INTO criminalRecordExtract(                        id,                        isEstablished,                        mother_name,                        birth_department,                    date,                    file_url,                        user_id                    )                    VALUES (?, ?, ?, ?, ?, ?, ?);                """;        return jdbcTemplate.update(sql,                recordExtract.getId(),                recordExtract.isEstablished(),                recordExtract.getMotherName(),                recordExtract.getBirthDepartment(),                Timestamp.from(recordExtract.getDate()),                ConvertData.objectToString(recordExtract.getFileUrl()),                recordExtract.getUserId());    }    @Override    public List<CriminalRecordExtractManager> selectCriminalRecordExtractByOrdersAndUser(String firstName) {        String sql = """            SELECT                o.id AS order_id,                o.order_date,                o.order_status,                o.order_amount,                o.order_number,                u.id AS user_id,                u.firstname AS first_name,                u.lastname AS last_name,                u.phone_number,                u.email,                u.town_of_residence,                u.is_active,                c.id AS criminal_record_id,                c.mother_name,                c.birth_department,                c.date AS criminal_record_date,                c.file_url,                c.isestablished AS is_established            FROM orders o            INNER JOIN users u ON o.user_id = u.id            INNER JOIN criminalrecordextract c ON u.id = c.user_id            WHERE o.ordertype = ?            AND u.firstname LIKE ?            ORDER BY o.order_date, u.firstname;            """;        return jdbcTemplate.query(sql, new Object[]{"criminal_record", "%" + firstName + "%"}, new CriminalRecordRowMapper());    }}